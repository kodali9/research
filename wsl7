Make sure loopback resolves in WSL
getent hosts localhost || echo "127.0.0.1 localhost" | sudo tee -a /etc/hosts
sudo sed -i 's/\r$//' /etc/hosts

======
Nuke any stale VS Code WSL server + temp sockets
pkill -f vscode-server 2>/dev/null || true
rm -rf ~/.vscode-server ~/.vscode-remote /tmp/vscode-*
======
Ensure proxy vars don’t hijack the localhost WebSocket
# Clear proxies for this session
unset HTTP_PROXY HTTPS_PROXY http_proxy https_proxy ALL_PROXY all_proxy
export NO_PROXY=localhost,127.0.0.1,::1
export no_proxy=$NO_PROXY

(If this helps, add those two NO_PROXY lines to ~/.bashrc so it’s permanent.)
========
VS Code settings (Windows sid

Open Settings (JSON) and add:
{
  "http.proxy": "",
  "http.proxySupport": "off",
  "remote.WSL.fileWatcher.polling": true
}
Zscaler/GlobalProtect sometimes interferes with VS Code’s WebSocket when proxy support is on, even for localhost.
=======
Reboot WSL and reconnect

wsl --shutdown
==========
Then open VS Code → Remote-WSL: Connect to WSL. It will reinstall the server.

========
If it still hangs

Run these quick checks inside WSL while trying to connect:

# A. Is the VS Code server listening on localhost?
ss -ltnp | grep -E 'node|vscode' || true

# B. Can we resolve + reach localhost?
getent hosts localhost
curl -sS http://127.0.0.1:*/version 2>/dev/null | head -1

	•	If A shows nothing, the server didn’t start → re-run step 2 and try again.
	•	If A shows a listener but it still fails, something on Windows (AV/Zscaler) is blocking loopback WebSockets. Keep step 4 in place, and also add Zscaler exception for Code.exe (loopback), or briefly toggle Zscaler Internet Security off to confir

 =========
 One-shot fixer (paste in WSL)

If you just want a single command that performs 1–3 every time:

sudo sh -c 'sed -i "s/\r$//" /etc/hosts; grep -q "^127.0.0.1 localhost" /etc/hosts || echo "127.0.0.1 localhost" >> /etc/hosts'
pkill -f vscode-server 2>/dev/null || true
rm -rf ~/.vscode-server ~/.vscode-remote /tmp/vscode-*
unset HTTP_PROXY HTTPS_PROXY http_proxy https_proxy ALL_PROXY all_proxy
export NO_PROXY=localhost,127.0.0.1,::1; export no_proxy=$NO_PROXY

Try that and then reconnect. If it errors again, copy the first 30 lines from Remote-WSL output (View → Output → “Remote - WSL”) and I’ll pinpoint the last blocker.
